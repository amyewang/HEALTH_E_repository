p1_humid<- filter(participant1_data, sensor_type == "humidity")
summary_humid_by_hour <- group_by(p1_humid, hour) %>%
summarise(humid_per_hour = mean(recorded))
plot_ly(summary_humid_by_hour,
x = hour,
y = humid_per_hour) %>%
layout(title = "Average humidity per hour<br>from dates 2/04/16 - 2/15/16")
---
title: "P1"
output: html_document
---
library(dplyr)
library(plotly)
install.packages("lubridate")
library(lubridate)
rm(list=ls())
setwd("/Users/amywang/Documents/HEALTH_E/data/")
participant1_data <- read.csv("P1_LotData.csv", stringsAsFactors=FALSE)
# Changing variable names in sensor_type
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::batterylevel:"] <- "battery"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::luminositysensor:"] <- "luminosity"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::humiditysensor:"] <- "humidity"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::temperaturesensor:"] <- "temperature"
participant1_data$sensor_type[participant1_data$sensor_type == "multisensor:sensor:"] <- "motion"
# Mutating data frame by adding a column of readable dates and times, hours
participant1_data <- mutate(participant1_data, readable_date =
as.POSIXct(date, format = "%m/%d/%Y %I:%M:%S %p"))
participant1_data <- mutate(participant1_data, hour = hour(readable_date))
# Graphing motion
p1_motion <- filter(participant1_data, sensor_type == "motion")
summary_motion_by_hour <- group_by(p1_motion, hour) %>%
summarise(motion_per_hour = sum(recorded == 255))
plot_ly(summary_motion_by_hour,
x = hour,
y = motion_per_hour) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
# Graphing luminosity
p1_luminosity <- filter(participant1_data, sensor_type == "luminosity")
summary_light_by_hour <- group_by(p1_luminosity, hour) %>%
summarise(light_per_hour = sum(recorded))
plot_ly(summary_light_by_hour,
x = hour,
y = light_per_hour) %>%
layout(title = "Average amount of light per hour<br>from dates 2/04/16 - 2/15/16")
# Graphing temperature
p1_temp <- filter(participant1_data, sensor_type == "temperature")
summary_temp_by_hour <- group_by(p1_temp, hour) %>%
summarise(temp_per_hour = mean(recorded))
plot_ly(summary_temp_by_hour,
x = hour,
y = temp_per_hour) %>%
layout(title = "Average temperature per hour<br>from dates 2/04/16 - 2/15/16")
#Graphing humidity
p1_humid<- filter(participant1_data, sensor_type == "humidity")
summary_humid_by_hour <- group_by(p1_humid, hour) %>%
summarise(humid_per_hour = mean(recorded))
plot_ly(summary_humid_by_hour,
x = hour,
y = humid_per_hour) %>%
layout(title = "Average humidity per hour<br>from dates 2/04/16 - 2/15/16")
---
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(p1_humid)
View(participant1_data)
participant1_data <- mutate(participant1_data, day = day(readable_date))
source('~/.active-rstudio-document', echo=TRUE)
feb_forth <- filter(participant1_data, day = 4)
feb_forth <- filter(participant1_data, day = "4")
feb_forth <- filter(participant1_data, day == 4)
View(feb_forth)
feb_forth_motion <- filter(feb_forth, sensor_type == "motion")
feb_forth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_forth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_forth_humidity <- filter(feb_forth, sensor_type == "humidity")
View(feb_forth_humidity)
View(feb_forth_humidity)
lot_ly(feb_fourth_motion,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
plot_ly(feb_fourth_motion,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_motion,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
add_trace(p, y = fitted(loess(date ~ recorded)), mode = "lines",
name = "loess smoother", showlegend = TRUE)
add_trace(p, y = fitted(loess(recoreded ~ date)), mode = "lines",
name = "loess smoother", showlegend = TRUE)
add_trace(p, y = fitted(loess(recorded ~ date)), mode = "lines",
name = "loess smoother", showlegend = TRUE)
add_trace(p, y = fitted(loess(recorded ~ date)), mode = "lines")
add_trace(p, y = fitted(loess(formula = recorded ~ date)), mode = "lines")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") +
geom_point(aes(text = paste("recorded = ", recorded)), size = 4) +
#geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") +
geom_point(aes(text = paste("recorded = ", recorded)), size = 4) +
geom_smooth(aes(colour = recorded, fill = recorded)) + facet_wrap(~ recorded) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
(gg <- ggplotly(p))
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") +
geom_line(aes(colour = "red")) + geom_smooth(aes(colour = "black")) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
aes(date, recorded)
mode = "markers") +
geom_line(aes(colour = "red")) + geom_smooth(aes(colour = "black")) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
aes(date, recorded)
mode = "markers") +
geom_line(aes(color = "red")) + geom_smooth(aes(color = "black")) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
aes(date, recorded) +
geom_line(aes(color = "red")) + geom_smooth(aes(color = "black")) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
aes(date, recorded) +
geom_point()+
stat_smooth()+
facet_wrap(~year) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- ggplot(feb_fourth_light,
aes(date, recorded)) +
geom_point()+
stat_smooth()+
facet_wrap(~year) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
add_trace(p, y = fitted(loess(recorded ~ as.numeric(date))))
add_trace(p, y = fitted(loess(recorded ~ date)))
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
add_trace(p, y = fitted(loess(recorded ~ as.numeric(date))))
source('~/.active-rstudio-document', echo=TRUE)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
p <- plot_ly(feb_fourth_light,
x = date,
y = hour,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
library(dplyr)
library(plotly)
library(lubridate)
setwd("/Users/amywang/Documents/HEALTH_E/data/")
participant1_data <- read.csv("P1_LotData.csv", stringsAsFactors=FALSE)
# Changing variable names in sensor_type
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::batterylevel:"] <- "battery"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::luminositysensor:"] <- "luminosity"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::humiditysensor:"] <- "humidity"
participant1_data$sensor_type[participant1_data$sensor_type ==
"multisensor:sensormultilevel::temperaturesensor:"] <- "temperature"
participant1_data$sensor_type[participant1_data$sensor_type == "multisensor:sensor:"] <- "motion"
# Mutating data frame by adding a column of readable dates and times, hours
participant1_data <- mutate(participant1_data, readable_date =
as.POSIXct(date, format = "%m/%d/%Y %I:%M:%S %p"))
participant1_data <- mutate(participant1_data, hour = hour(readable_date))
participant1_data <- mutate(participant1_data, day = day(readable_date))
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
add_trace(y = fitted(loess(recorded ~ as.numeric(date))))
add_trace(feb_forth_light, y = fitted(loess(recorded ~ as.numeric(date))))
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
add_trace(y = fitted(loess(recorded ~ as.numeric(date)))) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16") %>%
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
add_trace(y = fitted(loess(recorded ~ as.numeric(date)))) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
View(feb_fourth_light)
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
add_trace(y = fitted(loess(recorded ~ as.numeric(day)))) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
add_trace(y = fitted(loess(recorded ~ as.numeric(hour)))) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
feb_fourth <- filter(participant1_data, day == 4)
feb_fourth_motion <- filter(feb_forth, sensor_type == "motion")
feb_fourth_light <- filter(feb_forth, sensor_type == "luminosity")
feb_fourth_temp <- filter(feb_forth, sensor_type == "temperature")
feb_fourth_humidity <- filter(feb_forth, sensor_type == "humidity")
plot_ly(feb_fourth_light,
x = date,
y = recorded,
mode = "markers") %>%
add_trace(y = fitted(loess(recorded ~ as.numeric(readable_date)))) %>%
layout(title = "Average amount of motion per hour<br>from dates 2/04/16 - 2/15/16")
